u8 [4] a1;
u16[4] a2;
u24[4] a3;
u32[4] a4;

u32[4] m;

void main()
{
    $debug_break();
    
    $assert(a1[2] == 0);
    $assert(a2[2] == 0);
    $assert(a3[2] == 0);
    $assert(a4[2] == 0);
    
    m[0] = 0x00000000;
    m[1] = 0xffffffff;
    m[2] = 0xcafebabe;
    m[3] = 0x12345678;
    
    //for(u8 i = 0; i < 4; i = i + 1)
    //{
    //    a1[i] = m[i];
    //    a2[i] = m[i];
    //    a3[i] = m[i];
    //    a4[i] = m[i];
    //}

    //for(u8 i = 1; i < 4; i = i + 1)
    //{
    //    $assert((a1[0] & a1[i]) == 0);
    //    $assert((a1[0] & a2[i]) == 0);
    //    $assert((a1[0] & a3[i]) == 0);
    //    $assert((a1[0] & a4[i]) == 0);
    //    $assert((a2[0] & a2[i]) == 0);
    //    $assert((a2[0] & a3[i]) == 0);
    //    $assert((a2[0] & a4[i]) == 0);
    //    $assert((a3[0] & a3[i]) == 0);
    //    $assert((a3[0] & a4[i]) == 0);
    //    $assert((a4[0] & a4[i]) == 0);
    //    
    //    $assert((a1[0] | a1[i]) == a1[i]);
    //    $assert((a1[0] | a2[i]) == a2[i]);
    //    $assert((a1[0] | a3[i]) == a3[i]);
    //    $assert((a1[0] | a4[i]) == a4[i]);
    //    $assert((a2[0] | a2[i]) == a2[i]);
    //    $assert((a2[0] | a3[i]) == a3[i]);
    //    $assert((a2[0] | a4[i]) == a4[i]);
    //    $assert((a3[0] | a3[i]) == a3[i]);
    //    $assert((a3[0] | a4[i]) == a4[i]);
    //    $assert((a4[0] | a4[i]) == a4[i]);
    //}
    //
    //for(u8 i = 2; i < 4; i = i + 1)
    //{
    //    $assert((a1[1] & a1[i]) == a1[i]);
    //    $assert((a2[1] & a2[i]) == a2[i]);
    //    $assert((a3[1] & a3[i]) == a3[i]);
    //    $assert((a4[1] & a4[i]) == a4[i]);
    //    
    //    $assert((a1[1] & a2[i]) == u8(a2[i]));
    //    $assert((a1[1] & a3[i]) == u8(a3[i]));
    //    $assert((a1[1] & a4[i]) == u8(a4[i]));
    //    $assert((a2[1] & a3[i]) == u16(a3[i]));
    //    $assert((a2[1] & a4[i]) == u16(a4[i]));
    //    $assert((a3[1] & a4[i]) == u24(a4[i]));
    //    
    //    $assert((a1[1] | a1[i]) == 0xff);
    //    $assert((a2[1] | a2[i]) == 0xffff);
    //    $assert((a3[1] | a3[i]) == 0xffffff);
    //    $assert((a4[1] | a4[i]) == 0xffffffff);
    //}
   
    $debug_break();
}
