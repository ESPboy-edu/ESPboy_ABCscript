constexpr sprites TILES = sprites{ 16x16 "assets/tiles.png" };
constexpr sprites OBJECTS = sprites{ 16x16 "assets/objects.png" };
constexpr sprites PLAYER = sprites{ 16x16 "assets/player.png" };
constexpr sprites IMG_KEY = sprites{ "assets/key.png" };
constexpr sprites IMG_HEART = sprites{ 10x8 "assets/heart.png" };
constexpr sprites BACKGROUND = sprites{ 128x64 "assets/background.png" };

constexpr font LEVEL_START_FONT = font{ 12 "assets/8-BIT WONDER.ttf" };

void render()
{
    if(state == STATE_LEVEL)
        render_level();
    else if(state == STATE_INTRO)
        render_intro();
}

void render_intro()
{
    $draw_text_P(55, 2, FONT_BR6, "Score");
    $draw_textf(29, 10, LEVEL_START_FONT, "%06u", total_score);
    $draw_rect(26, 9, 76, 16, WHITE);
    $draw_sprite(56, 30, PLAYER, 7 + ((frame_count >> 3) & 0x3));
    $draw_textf(72, 37, FONT_BR6, "x%u", lives);
    if((frame_count & 0x3f) < 0x30)
        $draw_text_P(26, 51, LEVEL_START_FONT, "Press A");
}

void render_level()
{
    // setup
    int icamx = int($round(camx));
    int icamy = int($round(camy));

    // render map tiles
    {
        i8 cx = icamx / 16;
        i8 cy = icamy / 16;
        i8 xoff = -(icamx & 15);
        i8 yoff = -(icamy & 15);
        u8[] prog& m = maps[current_map].map;
        u8 w = map_width;

        // background pattern
        {
            i8 tx = -((icamx >> 1) & 127);
            i8 ty = -((icamy >> 1) & 127);
            $draw_sprite(tx      , ty     , BACKGROUND, 0);
            $draw_sprite(tx + 128, ty     , BACKGROUND, 1);
            $draw_sprite(tx      , ty + 64, BACKGROUND, 2);
            $draw_sprite(tx + 128, ty + 64, BACKGROUND, 3);
        }

        for(u8 i = 0; i < 5; ++i)
        {
            u16 index = (i + cy) * w + cx;
            for(u8 j = 0; j < 9; ++j)
            {
                u8 t = m[index + j] - 1;
                if(t >= 240)
                    continue;
                if(t >= 176)
                    t += ((frame_count << 2) & 0x30);
                $draw_sprite(j * 16 + xoff, i * 16 + yoff, TILES, t);
            }
        }
    }

    // render objects
    {
        for(u8 i = 0; i < MAX_OBJECTS; ++i)
        {
            map_object_t obj = objects[i];
            u8 t = obj.type;
            if(t == OBJ_NONE)
                continue;
            
            u8 index;
            if(t >= OBJ_MOB && obj.death_frames != 0)
            {
                if(obj.death_frames & 0x4)
                    continue;
                else
                    index = t + 64;
            }
            else
            {
                index = t;
                if(death_frames == 0)
                    index += ((frame_count + i * 173) & 0x30);
            }

            $draw_sprite(
                obj.x - icamx, obj.y - icamy, OBJECTS,
                index);
        }
    }

    // render player
    if(invincibility_frames == 0 || (frame_count & 0x04) == 0)
    {
        u8 index = 0;
        if(player_facing_right)
            index += 7;
        if(player_on_ground)
        {
            if(player_moving)
                index += ((frame_count >> 3) & 3);
        }
        else
        {
            index += 4;
        }
        if(death_frames != 0)
            index = 5;

        float x = px - camx - PXOFF;
        i16 y = $round(py) - icamy - i16(PYOFF);
        $draw_sprite($round(x), y, PLAYER, index);
    }
   
    // render HUD elements
    for(u8 i = 0; i < MAX_HEARTS; ++i)
        $draw_sprite(119 - i * 9, 0, IMG_HEART, i < hearts);
    for(u8 i = 0; i < keys; ++i)
        $draw_sprite(119 - i * 9, 8, IMG_KEY, 0);
    $draw_filled_rect(0, 0, 24, 6, BLACK);
    $draw_textf(0, 0, FONT_BR6, "%06u", score);

    // render level start animation
    if(level_start_frames != 0)
    {
        char[20] buf;
        $format(buf, "Level %d", current_map + 1);
        constexpr u8 y = 20;
        constexpr u8 h = 12;
        u8 w = $text_width(LEVEL_START_FONT, buf);
        i16 x = 64 - w / 2;
        if(level_start_frames >= 57)
            x += (level_start_frames - 57) * 10;
        if(level_start_frames <= 8)
            x -= (8 - level_start_frames) * 10;
        $draw_filled_rect(x - 2, y, w + 4, h + 4, BLACK);
        $draw_text(x, y + 2, LEVEL_START_FONT, buf);

        --level_start_frames;
    }
}
